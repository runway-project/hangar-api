import { ValidationError } from 'express-validator'
import {parse} from 'marked'
import sanitizeHtml from 'sanitize-html';

import { Player } from '../../entities/Player'
import { Competition, CompetitionState } from '../../entities/Competition'
import { Vessel } from '../../entities/Vessel'

export interface Input {
	player: Player,
	competition: Competition,
	errors?: ValidationError[]
}

$ const is_comp_owner = input.competition.validateOwnership( input.player )

style.scss {

}

<g-layout title='Competitions'>
	<main.l-row.l-stack>
		<g-form-errors errors=input.errors/>

		<h1>${input.competition.name}</h1>

		<await(is_comp_owner)>
			<@then|v|>
				<if(v)>
					<c-comp-organizer-controls competition=input.competition/>
				</if>
			</@then>
		</await>

		<p>Created by ${input.competition.organizers.map(player => player.display_name).join(', ')}</p>

		<div>
			$!{sanitizeHtml(parse(input.competition.description ?? '*No description provided*', { headerIds: false, mangle: false, }))}
		</div>

		<h2>Entries <if(input.competition.vessels?.length)>(${input.competition.vessels.length} vessels)</if></h2>

		<ul>
			<await(input.competition.vessels)>
				<@then|vessels|>
					<for|vessel| of=vessels ?? []>
						<li>
							<strong>${vessel.player.display_name}</strong> - ${vessel.name}
							<if(vessel.player.id === input.player.id)>
								<em> (This is your submission. The craft file is ${vessel.craft_file})</em>
							</if>
						</li>
					</for>
				</@then>
			</await>
		</ul>

		<if(input.competition.status === CompetitionState.ACCEPTING_SUBMISSIONS)>
			<a.c-button href=`/competitions/${input.competition.id}/submit-vessel`>Submit a Vessel</a>
		</if>
	</main>
</g-layout>
